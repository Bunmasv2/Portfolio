// ========================
// üß† DB SKILLS DATA (chu·∫©n theo project th·ª±c t·∫ø c·ªßa b·∫°n)
// ========================

export interface DbSkill {
  icon: string;
  title: {
    en: string;
    vi: string;
  };
  description: {
    en: string;
    vi: string;
  };
}

export const allSkills: DbSkill[] = [
  {
    icon: "LayoutDashboard",
    title: {
      en: "Frontend Development",
      vi: "Ph√°t Tri·ªÉn Giao Di·ªán (Frontend)",
    },
    description: {
      en: "Building dynamic user interfaces using ReactJS, React-Bootstrap, NextJS and Axios for API integration.",
      vi: "X√¢y d·ª±ng giao di·ªán ng∆∞·ªùi d√πng ƒë·ªông b·∫±ng ReactJS, React-Bootstrap, NextJS v√† t√≠ch h·ª£p API qua Axios.",
    },
  },
  {
    icon: "Code",
    title: {
      en: "Backend Development",
      vi: "Ph√°t Tri·ªÉn Backend",
    },
    description: {
      en: "Developing RESTful APIs using ASP.NET Core with layered architecture (Controller, Service, Repository) and clean code principles.",
      vi: "Ph√°t tri·ªÉn RESTful API b·∫±ng ASP.NET Core theo m√¥ h√¨nh nhi·ªÅu t·∫ßng (Controller, Service, Repository) v·ªõi c·∫•u tr√∫c r√µ r√†ng, d·ªÖ b·∫£o tr√¨.",
    },
  },
  {
    icon: "Database",
    title: {
      en: "Database Management",
      vi: "Qu·∫£n L√Ω C∆° S·ªü D·ªØ Li·ªáu",
    },
    description: {
      en: "Designing and managing SQL Server databases with stored procedures, foreign keys, and optimized relationships.",
      vi: "Thi·∫øt k·∫ø v√† qu·∫£n l√Ω c∆° s·ªü d·ªØ li·ªáu SQL Server v·ªõi stored procedure, kh√≥a ngo·∫°i v√† m·ªëi quan h·ªá ƒë∆∞·ª£c t·ªëi ∆∞u.",
    },
  },

  {
    icon: "Cloud",
    title: {
      en: "Deployment & Hosting",
      vi: "Tri·ªÉn Khai & L∆∞u Tr·ªØ",
    },
    description: {
      en: "Deploying applications on Vercel or IIS and connecting backend to cloud SQL Server databases.",
      vi: "Tri·ªÉn khai ·ª©ng d·ª•ng tr√™n Vercel ho·∫∑c IIS v√† k·∫øt n·ªëi backend v·ªõi c∆° s·ªü d·ªØ li·ªáu SQL Server tr√™n cloud.",
    },
  },
  {
    icon: "ShieldCheck",
    title: {
      en: "Security & Authentication",
      vi: "B·∫£o M·∫≠t & X√°c Th·ª±c",
    },
    description: {
      en: "Implementing secure APIs using JWT authentication, role-based access control, and email OTP verification.",
      vi: "Tri·ªÉn khai API an to√†n b·∫±ng JWT, ph√¢n quy·ªÅn theo vai tr√≤ v√† x√°c th·ª±c OTP qua email.",
    },
  },
  {
    icon: "ServerCog",
    title: {
      en: "System Integration",
      vi: "T√≠ch H·ª£p H·ªá Th·ªëng",
    },
    description: {
      en: "Connecting backend services, databases, and frontend components into a cohesive, maintainable ecosystem.",
      vi: "K·∫øt n·ªëi c√°c d·ªãch v·ª• backend, c∆° s·ªü d·ªØ li·ªáu v√† frontend th√†nh m·ªôt h·ªá th·ªëng ƒë·ªìng nh·∫•t, d·ªÖ b·∫£o tr√¨.",
    },
  },
];
